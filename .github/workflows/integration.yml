name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kea-api
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: false

      - name: Create mod cache directory
        run: mkdir -p /home/runner/go/pkg/mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: /home/runner/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go modules
        run: go mod download

      - name: Run unit tests
        run: go test -v ./...

  integration:
    name: Integration Tests
    needs: unit
    if: |
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[integration]')) ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, '[integration]'))
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: kea
          MYSQL_DATABASE: kea
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout kea-api
        uses: actions/checkout@v4

      - name: Checkout kea-docker
        uses: actions/checkout@v4
        with:
          repository: rannday/kea-docker
          path: kea-docker

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x

      - name: Build kea-custom Docker image
        run: docker build -t kea-custom:latest ./kea-docker

      - name: Run Kea container
        run: |
          docker run -d --name kea-int-test -p 8000:8000 kea-custom:latest
          echo "Waiting for Kea Control Agent (max 60s)..."
          for i in {1..60}; do
            response=$(curl -sf http://localhost:8000 || true)
            if echo "$response" | grep -q '"result"[[:space:]]*:[[:space:]]*0'; then
              echo "Kea Control Agent is up."
              break
            fi
            sleep 1
          done
          echo "Kea Control Agent did not respond." && curl -s http://localhost:8000 || true

      - name: Run integration tests
        run: go test -tags=integration ./internal/tests

      - name: Cleanup
        if: always()
        run: |
          docker stop kea-int-test || true
          docker rm kea-int-test || true
          docker image prune -f
